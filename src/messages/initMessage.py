def getMessage(swaggerFilePath):
    swaggerFile = open(swaggerFilePath)
    swagger_doc = swaggerFile.read()
    message = f'''
    Your task is to generate a test case for testing a blog and calculate system based on the following OpenAPI document delimited by triple backticks.

    One test case should contain multiple requests. There should be a certain connection between the requests in a test case, such as the resources generated by previous requests being used by subsequent requests. You should provide me with a complete test case through multiple rounds of dialogue, with each round of dialogue giving me a request in the sequence of test cases. The requests given in each round of conversation should be in JSON format. The JSON format request you return should include fields like operation_id, headers, path_variables, params, form_data, json_data, url and http_method. Note that the different fields in the request are optional and may not be present for all APIs. Here is a brief description of each field:

    - url: (required) The URL required to send the request.
    - http_method: (required) Corresponding HTTP methods for APIs, such as post, get, put, etc.
    - path_variables: (optional) Path variables of the request.
    - params: (optional) Dictionary, list of tuples, or bytes to send in the query string for the request.
    - form_data: (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the request as form-data.
    - json_data: (optional) A JSON serializable Python object to send in the body of the request.
    - headers: (optional) Dictionary of HTTP headers to send with the request.
    - operation_id: (required) The operation ID in OpenAPI/Swagger documentation.

    The following is an example of a JSON format request:

    {{"url":"http://localhost:8080/blog", "http_method":"post", "params":{{"blogId": 1, "content": "abc"}}, "operation_id":"create_new_blog"}}

    Please do not include any explanation or descriptions in your request instances.

    I will send out the requests you return to me for each round of conversation and return the response to you.
    When generating subsequent requests for this test case, you should consider the response I previously returned to you. After multiple rounds of dialogue, if you feel that all requests in the test case sequence have been returned to me, you should return "end" to me in the next round of dialogue to indicate that the test case generation is complete.


    ```
    {swagger_doc}
    ```

    The test cases you generate should trigger 20X or 50X status codes as much as possible, rather than 40X status codes. Minimize the number of bad requests in test cases as much as possible. 
    Additionally, to complete this task, you should use your knowledge of testing, software engineering, and other relevant factors to develop a testing strategy that covers all aspects of the system. You should consider classic api testing issues such as illegal parameter input, parameter boundary values, type overflow, etc.

    Now, please start generating the first request for the test case sequence.
    '''
    return message
